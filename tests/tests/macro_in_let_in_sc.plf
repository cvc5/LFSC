(declare term type)
(declare holds (! t term type))
(declare apply (! t1 term (! t2 term term)))
(declare f_not term)
(define not (# t term (apply f_not t)))
(declare f_or term)
(define or (# t1 term (# t2 term (apply (apply f_or t1) t2))))
(program sc_negate ((t term)) term (not t))
(program sc_split ((t term)) term (let s (sc_negate t) (or t s)))
(declare split (! t1 term (! t2 term (! u (holds t1) (! r (^ (sc_split t1) t2) (holds t2))))))
(declare p term)
(check
(% a (holds p)
 (: (holds (or p (not p)))
    (split _ _ a)
)))
